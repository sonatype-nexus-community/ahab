# Copyright 2018-present Sonatype Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

executors:
  go:
    docker:
      - image: cimg/go:1.17
#        uncomment line below for workaround to run docker integration tests on mac-os locally. see: https://stackoverflow.com/questions/45796661/docker-permission-denied-while-trying-to-connect-to-docker-daemon-with-local-ci/45796662#45796662
#        user: root

jobs:
  release:
    executor: go
    steps:
      - checkout
      - run: curl -sL https://git.io/goreleaser | bash
  build:
    executor: go
    environment:
      GO111MODULE: "on"
      TEST_RESULTS: /tmp/test-results
    steps:
      - setup_remote_docker
      - checkout
      - run: mkdir -p $TEST_RESULTS/gotest
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go install github.com/jstemmer/go-junit-report@latest
      - run: go install github.com/sonatype-nexus-community/nancy@latest
      - run: make deps
      - run: go list -json -deps | nancy sleuth
      - run: make ci-lint
#     'make test' alone shows more output when DockerIntegration tests fail, otherwise, normally not needed.
      - run: make test
      - run: make test | go-junit-report -set-exit-code > $TEST_RESULTS/gotest/report.xml
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /tmp/test-results/
      - store_test_results:
          path: /tmp/test-results/

workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          context: scan_ossi
      - release:
          context: ahab
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/

#  build_nightly:
#    triggers:
#      - schedule:
#          cron: "45 20 * * *"
#          filters:
#            branches:
#              only: main
#    jobs:
#      - build:
#          context: scan_ossi
